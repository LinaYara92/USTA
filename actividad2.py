# -*- coding: utf-8 -*-
"""Actividad2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dHsbUizQjUUP_pJ49g-PbffN6KU_wlF4
"""

# Definimos una función para realizar las operaciones de teoría de conjuntos
def analizar_eventos(espacio_muestral, A, B):
    # (a) ¿Es A un evento de Ω? -> A es subconjunto de Ω
    es_A_evento = A.issubset(espacio_muestral)

    # (b) ¿Es B un evento de Ω? -> B es subconjunto de Ω
    es_B_evento = B.issubset(espacio_muestral)

    # (c) Complemento de A -> Elementos en Ω que no están en A
    complemento_A = espacio_muestral - A

    # (d) Unión de A y B -> Elementos que están en A o en B (o en ambos)
    union_AB = A | B

    # (e) Intersección de A y B -> Elementos que están en A y en B
    interseccion_AB = A & B

    # (f) Diferencia de A y B -> Elementos en A que no están en B
    diferencia_AB = A - B

    # (g) Diferencia simétrica de A y B -> Elementos en A o en B, pero no en ambos
    diferencia_simetrica_AB = A ^ B

    # Retornamos los resultados como un diccionario
    return {
        'es_A_evento': es_A_evento,
        'es_B_evento': es_B_evento,
        'complemento_A': complemento_A,
        'union_AB': union_AB,
        'interseccion_AB': interseccion_AB,
        'diferencia_AB': diferencia_AB,
        'diferencia_simetrica_AB': diferencia_simetrica_AB
    }

# Definimos el espacio muestral Ω y los eventos A y B
espacio_muestral = {1, 2, 3, 4, 5, 6}
A = {2, 4, 6}
B = {1, 2, 3}

# Ejecutamos la función y mostramos los resultados
resultado = analizar_eventos(espacio_muestral, A, B)
for clave, valor in resultado.items():
    print(f"{clave}: {valor}")